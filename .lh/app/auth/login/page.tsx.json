{
    "sourceFile": "app/auth/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741892970913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741892970913,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Loader2, Mail, Lock } from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { toast } from 'sonner';\nimport { Separator } from '@/components/ui/separator';\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { login, signInWithGoogle } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    remember: false\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await login(formData.email, formData.password);\n      toast.success('Successfully logged in!');\n      router.push('/dashboard');\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to log in');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    setIsGoogleLoading(true);\n    \n    try {\n      await signInWithGoogle();\n      toast.success('Successfully logged in with Google!');\n      router.push('/dashboard');\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to log in with Google');\n    } finally {\n      setIsGoogleLoading(false);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6 }}\n      className=\"space-y-8\"\n    >\n      <div>\n        <h2 className=\"text-3xl font-bold tracking-tight\">Welcome back</h2>\n        <p className=\"text-muted-foreground mt-2\">\n          Enter your credentials to access your account\n        </p>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"email\">Email</Label>\n            <div className=\"relative mt-1\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Mail className=\"h-5 w-5 text-muted-foreground/50\" />\n              </div>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"name@company.com\"\n                className=\"pl-10\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                required\n                disabled={isLoading}\n              />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"flex justify-between items-center\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Link\n                href=\"/auth/reset-password\"\n                className=\"text-sm text-primary hover:underline\"\n              >\n                Forgot password?\n              </Link>\n            </div>\n            <div className=\"relative mt-1\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Lock className=\"h-5 w-5 text-muted-foreground/50\" />\n              </div>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                className=\"pl-10\"\n                value={formData.password}\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                required\n                disabled={isLoading}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center\">\n            <Checkbox\n              id=\"remember\"\n              checked={formData.remember}\n              onCheckedChange={(checked) => \n                setFormData({ ...formData, remember: checked as boolean })\n              }\n              disabled={isLoading}\n            />\n            <Label htmlFor=\"remember\" className=\"ml-2 text-sm cursor-pointer\">\n              Remember me for 30 days\n            </Label>\n          </div>\n        </div>\n\n        <Button\n          type=\"submit\"\n          className=\"w-full gradient-bg\"\n          size=\"lg\"\n          disabled={isLoading}\n        >\n          {isLoading ? (\n            <>\n              <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n              Signing in...\n            </>\n          ) : (\n            'Sign in'\n          )}\n        </Button>\n\n        <div className=\"relative my-4\">\n          <div className=\"absolute inset-0 flex items-center\">\n            <Separator className=\"w-full\" />\n          </div>\n          <div className=\"relative flex justify-center text-xs uppercase\">\n            <span className=\"bg-background px-2 text-muted-foreground\">\n              Or continue with\n            </span>\n          </div>\n        </div>\n\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          className=\"w-full\"\n          size=\"lg\"\n          onClick={handleGoogleSignIn}\n          disabled={isGoogleLoading}\n        >\n          {isGoogleLoading ? (\n            <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n          ) : (\n            <svg className=\"mr-2 h-5 w-5\" viewBox=\"0 0 24 24\">\n              <path\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                fill=\"#4285F4\"\n              />\n              <path\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                fill=\"#34A853\"\n              />\n              <path\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                fill=\"#FBBC05\"\n              />\n              <path\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                fill=\"#EA4335\"\n              />\n            </svg>\n          )}\n          Google\n        </Button>\n\n        <div className=\"text-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Don't have an account?{' '}\n            <Link\n              href=\"/auth/register\"\n              className=\"text-primary hover:underline font-medium\"\n            >\n              Create one now\n            </Link>\n          </p>\n        </div>\n      </form>\n    </motion.div>\n  );\n}"
        }
    ]
}