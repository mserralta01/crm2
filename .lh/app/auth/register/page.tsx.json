{
    "sourceFile": "app/auth/register/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741893006743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741893918958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,15 @@\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\n import { Loader2 } from 'lucide-react';\n import { useAuth } from '@/contexts/AuthContext';\n import { toast } from 'sonner';\n+import { Separator } from '@/components/ui/separator';\n \n export default function RegisterPage() {\n   const router = useRouter();\n-  const { register } = useAuth();\n+  const { register, signInWithGoogle } = useAuth();\n   const [isLoading, setIsLoading] = useState(false);\n+  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n   const [step, setStep] = useState(1);\n   const [formData, setFormData] = useState({\n     company: '',\n     address: '',\n@@ -38,8 +40,22 @@\n   const handlePlanChange = (value: string) => {\n     setFormData(prev => ({ ...prev, plan: value }));\n   };\n \n+  const handleGoogleSignIn = async () => {\n+    setIsGoogleLoading(true);\n+    \n+    try {\n+      await signInWithGoogle();\n+      toast.success('Account created successfully with Google!');\n+      router.push('/dashboard');\n+    } catch (error: any) {\n+      toast.error(error.message || 'Failed to sign up with Google');\n+    } finally {\n+      setIsGoogleLoading(false);\n+    }\n+  };\n+\n   const handleSubmit = async (e: React.FormEvent) => {\n     e.preventDefault();\n     if (step < 3) {\n       setStep(step + 1);\n@@ -77,13 +93,56 @@\n       transition={{ duration: 0.6 }}\n     >\n       <div className=\"mb-8\">\n         <h2 className=\"text-3xl font-bold mb-2\">Create your account</h2>\n-        <p className=\"text-muted-foreground\">\n-          {step === 1 && \"Let's start with your company details\"}\n-          {step === 2 && \"Set up your admin account\"}\n-          {step === 3 && \"Choose your subscription plan\"}\n+        <p className=\"text-muted-foreground mb-6\">\n+          Get started with your free trial today\n         </p>\n+\n+        {/* Google Sign-in Button */}\n+        <Button\n+          type=\"button\"\n+          variant=\"outline\"\n+          className=\"w-full mb-4\"\n+          size=\"lg\"\n+          onClick={handleGoogleSignIn}\n+          disabled={isGoogleLoading}\n+        >\n+          {isGoogleLoading ? (\n+            <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n+          ) : (\n+            <svg className=\"mr-2 h-5 w-5\" viewBox=\"0 0 24 24\">\n+              <path\n+                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n+                fill=\"#4285F4\"\n+              />\n+              <path\n+                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n+                fill=\"#34A853\"\n+              />\n+              <path\n+                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n+                fill=\"#FBBC05\"\n+              />\n+              <path\n+                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n+                fill=\"#EA4335\"\n+              />\n+            </svg>\n+          )}\n+          Sign up with Google\n+        </Button>\n+\n+        <div className=\"relative my-6\">\n+          <div className=\"absolute inset-0 flex items-center\">\n+            <Separator className=\"w-full\" />\n+          </div>\n+          <div className=\"relative flex justify-center text-xs uppercase\">\n+            <span className=\"bg-background px-2 text-muted-foreground\">\n+              Or sign up with email\n+            </span>\n+          </div>\n+        </div>\n       </div>\n \n       <form onSubmit={handleSubmit} className=\"space-y-6\">\n         {step === 1 && (\n"
                }
            ],
            "date": 1741893006743,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Loader2 } from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { toast } from 'sonner';\n\nexport default function RegisterPage() {\n  const router = useRouter();\n  const { register } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    company: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    plan: 'free'\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { id, value } = e.target;\n    setFormData(prev => ({ ...prev, [id]: value }));\n  };\n\n  const handlePlanChange = (value: string) => {\n    setFormData(prev => ({ ...prev, plan: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (step < 3) {\n      setStep(step + 1);\n      return;\n    }\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      toast.error(\"Passwords don't match\");\n      return;\n    }\n\n    setIsLoading(true);\n    \n    try {\n      // Register the user with Firebase\n      await register(formData.email, formData.password, formData.name);\n      \n      // TODO: Store additional company information in Firestore\n      // This would be implemented in a separate function in the AuthContext\n      \n      toast.success('Account created successfully!');\n      router.push('/dashboard');\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to create account');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6 }}\n    >\n      <div className=\"mb-8\">\n        <h2 className=\"text-3xl font-bold mb-2\">Create your account</h2>\n        <p className=\"text-muted-foreground\">\n          {step === 1 && \"Let's start with your company details\"}\n          {step === 2 && \"Set up your admin account\"}\n          {step === 3 && \"Choose your subscription plan\"}\n        </p>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {step === 1 && (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            className=\"space-y-4\"\n          >\n            <div>\n              <Label htmlFor=\"company\">Company Name</Label>\n              <Input\n                id=\"company\"\n                placeholder=\"Your Company Inc.\"\n                value={formData.company}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"address\">Company Address</Label>\n              <Input\n                id=\"address\"\n                placeholder=\"123 Business St.\"\n                value={formData.address}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"city\">City</Label>\n              <Input\n                id=\"city\"\n                placeholder=\"New York\"\n                value={formData.city}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"state\">State</Label>\n                <Input\n                  id=\"state\"\n                  placeholder=\"NY\"\n                  value={formData.state}\n                  onChange={handleChange}\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"zip\">ZIP Code</Label>\n                <Input\n                  id=\"zip\"\n                  placeholder=\"10001\"\n                  value={formData.zip}\n                  onChange={handleChange}\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n            </div>\n          </motion.div>\n        )}\n\n        {step === 2 && (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            className=\"space-y-4\"\n          >\n            <div>\n              <Label htmlFor=\"name\">Full Name</Label>\n              <Input\n                id=\"name\"\n                placeholder=\"John Doe\"\n                value={formData.name}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"email\">Work Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"john@company.com\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n              <Input\n                id=\"confirmPassword\"\n                type=\"password\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                required\n                disabled={isLoading}\n              />\n            </div>\n          </motion.div>\n        )}\n\n        {step === 3 && (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            className=\"space-y-6\"\n          >\n            <RadioGroup \n              defaultValue=\"free\" \n              value={formData.plan}\n              onValueChange={handlePlanChange}\n            >\n              <div className=\"flex items-center space-x-2 border p-4 rounded-lg\">\n                <RadioGroupItem value=\"free\" id=\"free\" />\n                <Label htmlFor=\"free\" className=\"flex-1\">\n                  <div className=\"font-semibold\">Free Plan</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    Perfect for small teams getting started\n                  </div>\n                </Label>\n                <div className=\"text-lg font-semibold\">$0</div>\n              </div>\n\n              <div className=\"flex items-center space-x-2 border border-primary p-4 rounded-lg bg-primary/5\">\n                <RadioGroupItem value=\"premium\" id=\"premium\" />\n                <Label htmlFor=\"premium\" className=\"flex-1\">\n                  <div className=\"font-semibold\">Premium Plan</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    For growing teams needing more power\n                  </div>\n                </Label>\n                <div className=\"text-lg font-semibold\">$79</div>\n              </div>\n            </RadioGroup>\n          </motion.div>\n        )}\n\n        <div className=\"flex space-x-4\">\n          {step > 1 && (\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => setStep(step - 1)}\n              disabled={isLoading}\n            >\n              Previous\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            className=\"flex-1 gradient-bg\"\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Creating account...\n              </>\n            ) : step < 3 ? (\n              'Continue'\n            ) : (\n              'Create Account'\n            )}\n          </Button>\n        </div>\n\n        <p className=\"text-center text-sm text-muted-foreground\">\n          Already have an account?{' '}\n          <Link\n            href=\"/auth/login\"\n            className=\"text-primary hover:underline\"\n          >\n            Sign in\n          </Link>\n        </p>\n      </form>\n    </motion.div>\n  );\n}"
        }
    ]
}