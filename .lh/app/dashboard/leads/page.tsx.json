{
    "sourceFile": "app/dashboard/leads/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741293899211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741293899211,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Card } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { LeadsTable } from '@/components/leads/leads-table';\nimport { LeadsKanban } from '@/components/leads/leads-kanban';\nimport { AddLeadDialog } from '@/components/leads/add-lead-dialog';\nimport { Search, Plus, LayoutGrid, List } from 'lucide-react';\n\nexport default function LeadsPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [refreshKey, setRefreshKey] = useState(0); // Use to trigger refresh of lead data\n\n  // Function to refresh data after a new lead is added\n  const handleLeadAdded = () => {\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background p-8\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Leads</h1>\n            <p className=\"text-muted-foreground\">Manage and track your sales leads</p>\n          </div>\n          <AddLeadDialog onLeadAdded={handleLeadAdded}>\n            <Button className=\"gradient-bg\">\n              <Plus className=\"w-5 h-5 mr-2\" />\n              Add Lead\n            </Button>\n          </AddLeadDialog>\n        </div>\n\n        <Card className=\"mb-8\">\n          <div className=\"p-4 flex gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\n              <Input\n                placeholder=\"Search leads...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            <Button variant=\"outline\">\n              Filters\n            </Button>\n          </div>\n        </Card>\n\n        <Tabs defaultValue=\"kanban\" className=\"w-full\">\n          <div className=\"flex justify-end mb-4\">\n            <TabsList>\n              <TabsTrigger value=\"kanban\">\n                <LayoutGrid className=\"w-4 h-4 mr-2\" />\n                Kanban\n              </TabsTrigger>\n              <TabsTrigger value=\"list\">\n                <List className=\"w-4 h-4 mr-2\" />\n                List\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          <TabsContent value=\"kanban\">\n            <LeadsKanban searchTerm={searchTerm} key={`kanban-${refreshKey}`} />\n          </TabsContent>\n\n          <TabsContent value=\"list\">\n            <LeadsTable searchTerm={searchTerm} key={`table-${refreshKey}`} />\n          </TabsContent>\n        </Tabs>\n      </motion.div>\n    </div>\n  );\n}"
        }
    ]
}