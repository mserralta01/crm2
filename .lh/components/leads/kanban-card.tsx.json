{
    "sourceFile": "components/leads/kanban-card.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1741293309363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741293374186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,11 @@\n     ) {\n       return;\n     }\n     \n+    // Add console log for debugging\n+    console.log('Card clicked, navigating to:', `/dashboard/leads/${lead.id}`);\n+    \n     // Navigate to lead detail page\n     router.push(`/dashboard/leads/${lead.id}`);\n   };\n \n"
                },
                {
                    "date": 1742493287046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+\"use client\";\n+\n+import { useSortable } from '@dnd-kit/sortable';\n+import { CSS } from '@dnd-kit/utilities';\n+import { Card } from '@/components/ui/card';\n+import { Button } from '@/components/ui/button';\n+import { useRouter } from 'next/navigation';\n+import { \n+  Mail, \n+  Phone, \n+  MoreHorizontal, \n+  Calendar,\n+  Building2,\n+  DollarSign,\n+  Clock\n+} from 'lucide-react';\n+import {\n+  DropdownMenu,\n+  DropdownMenuContent,\n+  DropdownMenuItem,\n+  DropdownMenuTrigger,\n+} from '@/components/ui/dropdown-menu';\n+import React from 'react';\n+\n+interface Lead {\n+  id: number;\n+  name: string;\n+  company: string;\n+  email: string;\n+  phone: string;\n+  status: string;\n+  value: string;\n+  position: number;\n+}\n+\n+interface KanbanCardProps {\n+  id: string;\n+  lead: Lead;\n+  columnColor: string;\n+}\n+\n+// Wrap with React.memo for performance optimization and position stability\n+export const KanbanCard = React.memo(function KanbanCard({ id, lead, columnColor }: KanbanCardProps) {\n+  const router = useRouter();\n+  const {\n+    attributes,\n+    listeners,\n+    setNodeRef,\n+    transform,\n+    transition,\n+  } = useSortable({ id });\n+\n+  const style = {\n+    transform: CSS.Transform.toString(transform),\n+    transition,\n+  };\n+\n+  const handleCardClick = (e: React.MouseEvent) => {\n+    // Prevent navigation when clicking on interactive elements\n+    if (\n+      e.target instanceof HTMLElement && \n+      (e.target.closest('button') || e.target.closest('[role=\"menuitem\"]'))\n+    ) {\n+      return;\n+    }\n+    \n+    // Add console log for debugging\n+    console.log('Card clicked, navigating to:', `/dashboard/leads/${lead.id}`);\n+    \n+    // Navigate to lead detail page\n+    router.push(`/dashboard/leads/${lead.id}`);\n+  };\n+\n+  const handleEmailClick = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    window.location.href = `mailto:${lead.email}`;\n+  };\n+\n+  const handlePhoneClick = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    window.location.href = `tel:${lead.phone}`;\n+  };\n+\n+  return (\n+    <Card\n+      ref={setNodeRef}\n+      style={style}\n+      className=\"p-4 bg-card hover:shadow-md transition-shadow border border-slate-200 cursor-pointer select-none\"\n+      onClick={handleCardClick}\n+      {...attributes}\n+      {...listeners}\n+    >\n+      <div className=\"flex justify-between items-start mb-3\">\n+        <div className=\"flex-1\">\n+          <h4 className=\"font-medium text-base mb-1\">{lead.name}</h4>\n+          <div className=\"flex items-center text-sm text-muted-foreground\">\n+            <Building2 className=\"w-4 h-4 mr-1\" />\n+            {lead.company}\n+          </div>\n+        </div>\n+        <DropdownMenu>\n+          <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n+            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n+              <MoreHorizontal className=\"h-4 w-4\" />\n+            </Button>\n+          </DropdownMenuTrigger>\n+          <DropdownMenuContent align=\"end\">\n+            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}`)}>\n+              View Details\n+            </DropdownMenuItem>\n+            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}?edit=true`)}>\n+              Edit Lead\n+            </DropdownMenuItem>\n+            <DropdownMenuItem className=\"text-red-600\">Delete</DropdownMenuItem>\n+          </DropdownMenuContent>\n+        </DropdownMenu>\n+      </div>\n+      \n+      <div className=\"flex items-center space-x-2 mb-3\">\n+        <Button \n+          variant=\"ghost\" \n+          size=\"icon\" \n+          className=\"h-8 w-8 hover:bg-slate-100\"\n+          title={lead.email}\n+          onClick={handleEmailClick}\n+        >\n+          <Mail className=\"h-4 w-4\" />\n+        </Button>\n+        <Button \n+          variant=\"ghost\" \n+          size=\"icon\" \n+          className=\"h-8 w-8 hover:bg-slate-100\"\n+          title={lead.phone}\n+          onClick={handlePhoneClick}\n+        >\n+          <Phone className=\"h-4 w-4\" />\n+        </Button>\n+      </div>\n+\n+      <div className=\"flex justify-between items-center text-sm\">\n+        <div className=\"flex items-center text-emerald-600 font-medium\">\n+          <DollarSign className=\"w-4 h-4 mr-1\" />\n+          {lead.value}\n+        </div>\n+        <div className=\"flex items-center text-muted-foreground\">\n+          <Clock className=\"w-4 h-4 mr-1\" />\n+          <span>2 days ago</span>\n+        </div>\n+      </div>\n+    </Card>\n+  );\n+}, (prevProps, nextProps) => {\n+  // Custom comparison function to check if we need to re-render\n+  // Only re-render if critical props change\n+  return (\n+    prevProps.id === nextProps.id &&\n+    prevProps.columnColor === nextProps.columnColor &&\n+    prevProps.lead.name === nextProps.lead.name &&\n+    prevProps.lead.company === nextProps.lead.company &&\n+    prevProps.lead.status === nextProps.lead.status &&\n+    prevProps.lead.value === nextProps.lead.value &&\n+    prevProps.lead.position === nextProps.lead.position\n+  );\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742494089178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,154 +160,5 @@\n     prevProps.lead.status === nextProps.lead.status &&\n     prevProps.lead.value === nextProps.lead.value &&\n     prevProps.lead.position === nextProps.lead.position\n   );\n-});\n-\"use client\";\n-\n-import { useSortable } from '@dnd-kit/sortable';\n-import { CSS } from '@dnd-kit/utilities';\n-import { Card } from '@/components/ui/card';\n-import { Button } from '@/components/ui/button';\n-import { useRouter } from 'next/navigation';\n-import { \n-  Mail, \n-  Phone, \n-  MoreHorizontal, \n-  Calendar,\n-  Building2,\n-  DollarSign,\n-  Clock\n-} from 'lucide-react';\n-import {\n-  DropdownMenu,\n-  DropdownMenuContent,\n-  DropdownMenuItem,\n-  DropdownMenuTrigger,\n-} from '@/components/ui/dropdown-menu';\n-\n-interface Lead {\n-  id: number;\n-  name: string;\n-  company: string;\n-  email: string;\n-  phone: string;\n-  status: string;\n-  value: string;\n-}\n-\n-interface KanbanCardProps {\n-  id: string;\n-  lead: Lead;\n-  columnColor: string;\n-}\n-\n-export function KanbanCard({ id, lead, columnColor }: KanbanCardProps) {\n-  const router = useRouter();\n-  const {\n-    attributes,\n-    listeners,\n-    setNodeRef,\n-    transform,\n-    transition,\n-  } = useSortable({ id });\n-\n-  const style = {\n-    transform: CSS.Transform.toString(transform),\n-    transition,\n-  };\n-\n-  const handleCardClick = (e: React.MouseEvent) => {\n-    // Prevent navigation when clicking on interactive elements\n-    if (\n-      e.target instanceof HTMLElement && \n-      (e.target.closest('button') || e.target.closest('[role=\"menuitem\"]'))\n-    ) {\n-      return;\n-    }\n-    \n-    // Add console log for debugging\n-    console.log('Card clicked, navigating to:', `/dashboard/leads/${lead.id}`);\n-    \n-    // Navigate to lead detail page\n-    router.push(`/dashboard/leads/${lead.id}`);\n-  };\n-\n-  const handleEmailClick = (e: React.MouseEvent) => {\n-    e.stopPropagation();\n-    window.location.href = `mailto:${lead.email}`;\n-  };\n-\n-  const handlePhoneClick = (e: React.MouseEvent) => {\n-    e.stopPropagation();\n-    window.location.href = `tel:${lead.phone}`;\n-  };\n-\n-  return (\n-    <Card\n-      ref={setNodeRef}\n-      style={style}\n-      className=\"p-4 bg-card hover:shadow-md transition-shadow border border-slate-200 cursor-pointer select-none\"\n-      onClick={handleCardClick}\n-      {...attributes}\n-      {...listeners}\n-    >\n-      <div className=\"flex justify-between items-start mb-3\">\n-        <div className=\"flex-1\">\n-          <h4 className=\"font-medium text-base mb-1\">{lead.name}</h4>\n-          <div className=\"flex items-center text-sm text-muted-foreground\">\n-            <Building2 className=\"w-4 h-4 mr-1\" />\n-            {lead.company}\n-          </div>\n-        </div>\n-        <DropdownMenu>\n-          <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n-            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n-              <MoreHorizontal className=\"h-4 w-4\" />\n-            </Button>\n-          </DropdownMenuTrigger>\n-          <DropdownMenuContent align=\"end\">\n-            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}`)}>\n-              View Details\n-            </DropdownMenuItem>\n-            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}?edit=true`)}>\n-              Edit Lead\n-            </DropdownMenuItem>\n-            <DropdownMenuItem className=\"text-red-600\">Delete</DropdownMenuItem>\n-          </DropdownMenuContent>\n-        </DropdownMenu>\n-      </div>\n-      \n-      <div className=\"flex items-center space-x-2 mb-3\">\n-        <Button \n-          variant=\"ghost\" \n-          size=\"icon\" \n-          className=\"h-8 w-8 hover:bg-slate-100\"\n-          title={lead.email}\n-          onClick={handleEmailClick}\n-        >\n-          <Mail className=\"h-4 w-4\" />\n-        </Button>\n-        <Button \n-          variant=\"ghost\" \n-          size=\"icon\" \n-          className=\"h-8 w-8 hover:bg-slate-100\"\n-          title={lead.phone}\n-          onClick={handlePhoneClick}\n-        >\n-          <Phone className=\"h-4 w-4\" />\n-        </Button>\n-      </div>\n-\n-      <div className=\"flex justify-between items-center text-sm\">\n-        <div className=\"flex items-center text-emerald-600 font-medium\">\n-          <DollarSign className=\"w-4 h-4 mr-1\" />\n-          {lead.value}\n-        </div>\n-        <div className=\"flex items-center text-muted-foreground\">\n-          <Clock className=\"w-4 h-4 mr-1\" />\n-          <span>2 days ago</span>\n-        </div>\n-      </div>\n-    </Card>\n-  );\n-}\n\\ No newline at end of file\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742495255309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\n \n import { useSortable } from '@dnd-kit/sortable';\n import { CSS } from '@dnd-kit/utilities';\n-import { Card } from '@/components/ui/card';\n+import { Card, CardContent, CardFooter } from '@/components/ui/card';\n import { Button } from '@/components/ui/button';\n import { useRouter } from 'next/navigation';\n import { \n   Mail, \n@@ -20,8 +20,13 @@\n   DropdownMenuItem,\n   DropdownMenuTrigger,\n } from '@/components/ui/dropdown-menu';\n import React from 'react';\n+import { Badge } from '@/components/ui/badge';\n+import { Avatar } from '@/components/ui/avatar';\n+import { formatDistanceToNow } from 'date-fns';\n+import { Lead } from '@/data/leads';\n+import { formatCurrency } from '@/lib/utils';\n \n interface Lead {\n   id: number;\n   name: string;\n@@ -30,18 +35,20 @@\n   phone: string;\n   status: string;\n   value: string;\n   position: number;\n+  lastActivity?: string;\n }\n \n interface KanbanCardProps {\n   id: string;\n   lead: Lead;\n   columnColor: string;\n+  isDragging?: boolean;\n }\n \n-// Wrap with React.memo for performance optimization and position stability\n-export const KanbanCard = React.memo(function KanbanCard({ id, lead, columnColor }: KanbanCardProps) {\n+// Optimized KanbanCard component with professional design\n+export function KanbanCard({ id, lead, columnColor, isDragging }: KanbanCardProps) {\n   const router = useRouter();\n   const {\n     attributes,\n     listeners,\n@@ -54,8 +61,11 @@\n     transform: CSS.Transform.toString(transform),\n     transition,\n   };\n \n+  // Extract the color from the gradient string for the avatar\n+  const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n+  \n   const handleCardClick = (e: React.MouseEvent) => {\n     // Prevent navigation when clicking on interactive elements\n     if (\n       e.target instanceof HTMLElement && \n@@ -81,84 +91,64 @@\n     window.location.href = `tel:${lead.phone}`;\n   };\n \n   return (\n-    <Card\n+    <Card \n       ref={setNodeRef}\n       style={style}\n-      className=\"p-4 bg-card hover:shadow-md transition-shadow border border-slate-200 cursor-pointer select-none\"\n+      className={`shadow-sm hover:shadow-md transition-shadow bg-white ${\n+        isDragging ? 'opacity-70' : ''\n+      }`}\n       onClick={handleCardClick}\n       {...attributes}\n       {...listeners}\n     >\n-      <div className=\"flex justify-between items-start mb-3\">\n-        <div className=\"flex-1\">\n-          <h4 className=\"font-medium text-base mb-1\">{lead.name}</h4>\n-          <div className=\"flex items-center text-sm text-muted-foreground\">\n-            <Building2 className=\"w-4 h-4 mr-1\" />\n-            {lead.company}\n+      <CardContent className=\"p-4 pt-4\">\n+        <div className=\"flex justify-between items-start mb-2\">\n+          <div className=\"flex items-center\">\n+            <Avatar className=\"h-8 w-8 mr-2\">\n+              <div className={`h-full w-full flex items-center justify-center ${colorClass} text-white font-medium`}>\n+                {lead.name?.charAt(0) || '?'}\n+              </div>\n+            </Avatar>\n+            <div>\n+              <h3 className=\"font-semibold text-sm\">{lead.name}</h3>\n+              <p className=\"text-xs text-muted-foreground\">{lead.company}</p>\n+            </div>\n           </div>\n+          <Badge variant=\"outline\" className=\"bg-muted/30 text-xs\">\n+            {formatCurrency(lead.value || 0)}\n+          </Badge>\n         </div>\n-        <DropdownMenu>\n-          <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n-            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n-              <MoreHorizontal className=\"h-4 w-4\" />\n-            </Button>\n-          </DropdownMenuTrigger>\n-          <DropdownMenuContent align=\"end\">\n-            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}`)}>\n-              View Details\n-            </DropdownMenuItem>\n-            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}?edit=true`)}>\n-              Edit Lead\n-            </DropdownMenuItem>\n-            <DropdownMenuItem className=\"text-red-600\">Delete</DropdownMenuItem>\n-          </DropdownMenuContent>\n-        </DropdownMenu>\n-      </div>\n+        \n+        <div className=\"flex flex-col gap-1 text-xs text-muted-foreground mt-3\">\n+          {lead.email && (\n+            <div className=\"flex items-center gap-2\">\n+              <Mail className=\"h-3 w-3\" />\n+              <span className=\"truncate max-w-[180px]\">{lead.email}</span>\n+            </div>\n+          )}\n+          {lead.phone && (\n+            <div className=\"flex items-center gap-2\">\n+              <Phone className=\"h-3 w-3\" />\n+              <span>{lead.phone}</span>\n+            </div>\n+          )}\n+        </div>\n+      </CardContent>\n       \n-      <div className=\"flex items-center space-x-2 mb-3\">\n-        <Button \n-          variant=\"ghost\" \n-          size=\"icon\" \n-          className=\"h-8 w-8 hover:bg-slate-100\"\n-          title={lead.email}\n-          onClick={handleEmailClick}\n-        >\n-          <Mail className=\"h-4 w-4\" />\n-        </Button>\n-        <Button \n\\ No newline at end of file\n-          variant=\"ghost\" \n-          size=\"icon\" \n-          className=\"h-8 w-8 hover:bg-slate-100\"\n-          title={lead.phone}\n-          onClick={handlePhoneClick}\n-        >\n-          <Phone className=\"h-4 w-4\" />\n-        </Button>\n-      </div>\n-\n-      <div className=\"flex justify-between items-center text-sm\">\n-        <div className=\"flex items-center text-emerald-600 font-medium\">\n-          <DollarSign className=\"w-4 h-4 mr-1\" />\n-          {lead.value}\n+      <CardFooter className=\"px-4 py-2 border-t flex justify-between text-xs text-muted-foreground\">\n+        <div className=\"flex items-center\">\n+          <Clock className=\"h-3 w-3 mr-1\" />\n+          <span>\n+            {lead.lastActivity \n+              ? formatDistanceToNow(new Date(lead.lastActivity), { addSuffix: true })\n+              : 'No activity'}\n+          </span>\n         </div>\n-        <div className=\"flex items-center text-muted-foreground\">\n-          <Clock className=\"w-4 h-4 mr-1\" />\n-          <span>2 days ago</span>\n-        </div>\n-      </div>\n+        <button className=\"hover:bg-muted/50 p-1 rounded-full\">\n+          <MoreHorizontal className=\"h-3 w-3\" />\n+        </button>\n+      </CardFooter>\n     </Card>\n   );\n-}, (prevProps, nextProps) => {\n-  // Custom comparison function to check if we need to re-render\n-  // Only re-render if critical props change\n-  return (\n-    prevProps.id === nextProps.id &&\n-    prevProps.columnColor === nextProps.columnColor &&\n-    prevProps.lead.name === nextProps.lead.name &&\n-    prevProps.lead.company === nextProps.lead.company &&\n-    prevProps.lead.status === nextProps.lead.status &&\n-    prevProps.lead.value === nextProps.lead.value &&\n-    prevProps.lead.position === nextProps.lead.position\n-  );\n-});\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742495274654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,20 +26,8 @@\n import { formatDistanceToNow } from 'date-fns';\n import { Lead } from '@/data/leads';\n import { formatCurrency } from '@/lib/utils';\n \n-interface Lead {\n-  id: number;\n-  name: string;\n-  company: string;\n-  email: string;\n-  phone: string;\n-  status: string;\n-  value: string;\n-  position: number;\n-  lastActivity?: string;\n-}\n-\n interface KanbanCardProps {\n   id: string;\n   lead: Lead;\n   columnColor: string;\n"
                },
                {
                    "date": 1742496857595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,12 +61,9 @@\n     ) {\n       return;\n     }\n     \n-    // Add console log for debugging\n-    console.log('Card clicked, navigating to:', `/dashboard/leads/${lead.id}`);\n-    \n-    // Navigate to lead detail page\n+    // Navigate to lead detail page using the ID (no conversion needed since it's already a string)\n     router.push(`/dashboard/leads/${lead.id}`);\n   };\n \n   const handleEmailClick = (e: React.MouseEvent) => {\n"
                },
                {
                    "date": 1742498028179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n   MoreHorizontal, \n   Calendar,\n   Building2,\n   DollarSign,\n-  Clock\n+  Clock,\n+  GripVertical\n } from 'lucide-react';\n import {\n   DropdownMenu,\n   DropdownMenuContent,\n@@ -79,16 +80,19 @@\n   return (\n     <Card \n       ref={setNodeRef}\n       style={style}\n-      className={`shadow-sm hover:shadow-md transition-shadow bg-white ${\n+      className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer ${\n         isDragging ? 'opacity-70' : ''\n       }`}\n       onClick={handleCardClick}\n       {...attributes}\n       {...listeners}\n     >\n-      <CardContent className=\"p-4 pt-4\">\n+      <div className=\"absolute top-0 left-0 w-1.5 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n+        <GripVertical className=\"h-5 w-5 text-muted-foreground/50\" />\n+      </div>\n+      <CardContent className=\"p-4 pt-4 pl-6\">\n         <div className=\"flex justify-between items-start mb-2\">\n           <div className=\"flex items-center\">\n             <Avatar className=\"h-8 w-8 mr-2\">\n               <div className={`h-full w-full flex items-center justify-center ${colorClass} text-white font-medium`}>\n@@ -120,18 +124,21 @@\n           )}\n         </div>\n       </CardContent>\n       \n-      <CardFooter className=\"px-4 py-2 border-t flex justify-between text-xs text-muted-foreground\">\n+      <CardFooter className=\"px-4 py-2 pl-6 border-t flex justify-between text-xs text-muted-foreground\">\n         <div className=\"flex items-center\">\n           <Clock className=\"h-3 w-3 mr-1\" />\n           <span>\n             {lead.lastActivity \n               ? formatDistanceToNow(new Date(lead.lastActivity), { addSuffix: true })\n               : 'No activity'}\n           </span>\n         </div>\n-        <button className=\"hover:bg-muted/50 p-1 rounded-full\">\n+        <button \n+          className=\"hover:bg-muted/50 p-1 rounded-full\"\n+          onClick={(e) => e.stopPropagation()}\n+        >\n           <MoreHorizontal className=\"h-3 w-3\" />\n         </button>\n       </CardFooter>\n     </Card>\n"
                },
                {
                    "date": 1742498059685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,10 @@\n \n   const style = {\n     transform: CSS.Transform.toString(transform),\n     transition,\n+    touchAction: 'manipulation',\n+    userSelect: 'none',\n   };\n \n   // Extract the color from the gradient string for the avatar\n   const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n"
                },
                {
                    "date": 1742498065318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,9 @@\n \n   const style = {\n     transform: CSS.Transform.toString(transform),\n     transition,\n-    touchAction: 'manipulation',\n-    userSelect: 'none',\n-  };\n+  } as React.CSSProperties;\n \n   // Extract the color from the gradient string for the avatar\n   const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n   \n"
                },
                {
                    "date": 1742498073697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,19 +80,19 @@\n   return (\n     <Card \n       ref={setNodeRef}\n       style={style}\n-      className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer ${\n+      className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer touch-manipulation select-none ${\n         isDragging ? 'opacity-70' : ''\n       }`}\n       onClick={handleCardClick}\n       {...attributes}\n       {...listeners}\n     >\n-      <div className=\"absolute top-0 left-0 w-1.5 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n+      <div className=\"absolute top-0 left-0 w-6 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n         <GripVertical className=\"h-5 w-5 text-muted-foreground/50\" />\n       </div>\n-      <CardContent className=\"p-4 pt-4 pl-6\">\n+      <CardContent className=\"p-4 pt-4 pl-8\">\n         <div className=\"flex justify-between items-start mb-2\">\n           <div className=\"flex items-center\">\n             <Avatar className=\"h-8 w-8 mr-2\">\n               <div className={`h-full w-full flex items-center justify-center ${colorClass} text-white font-medium`}>\n"
                },
                {
                    "date": 1742498082128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n           )}\n         </div>\n       </CardContent>\n       \n-      <CardFooter className=\"px-4 py-2 pl-6 border-t flex justify-between text-xs text-muted-foreground\">\n+      <CardFooter className=\"px-4 py-2 pl-8 border-t flex justify-between text-xs text-muted-foreground\">\n         <div className=\"flex items-center\">\n           <Clock className=\"h-3 w-3 mr-1\" />\n           <span>\n             {lead.lastActivity \n"
                },
                {
                    "date": 1742498311167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+\"use client\";\n+\n+import { useSortable } from '@dnd-kit/sortable';\n+import { CSS } from '@dnd-kit/utilities';\n+import { Card, CardContent, CardFooter } from '@/components/ui/card';\n+import { Button } from '@/components/ui/button';\n+import { useRouter } from 'next/navigation';\n+import { \n+  Mail, \n+  Phone, \n+  MoreHorizontal, \n+  Calendar,\n+  Building2,\n+  DollarSign,\n+  Clock,\n+  GripVertical\n+} from 'lucide-react';\n+import {\n+  DropdownMenu,\n+  DropdownMenuContent,\n+  DropdownMenuItem,\n+  DropdownMenuTrigger,\n+} from '@/components/ui/dropdown-menu';\n+import React from 'react';\n+import { Badge } from '@/components/ui/badge';\n+import { Avatar } from '@/components/ui/avatar';\n+import { formatDistanceToNow } from 'date-fns';\n+import { Lead } from '@/data/leads';\n+import { formatCurrency } from '@/lib/utils';\n+\n+interface KanbanCardProps {\n+  id: string;\n+  lead: Lead;\n+  columnColor: string;\n+  isDragging?: boolean;\n+}\n+\n+// Optimized KanbanCard component with professional design\n+export function KanbanCard({ id, lead, columnColor, isDragging }: KanbanCardProps) {\n+  const router = useRouter();\n+  const {\n+    attributes,\n+    listeners,\n+    setNodeRef,\n+    transform,\n+    transition,\n+  } = useSortable({ id });\n+\n+  const style = {\n+    transform: CSS.Transform.toString(transform),\n+    transition,\n+  } as React.CSSProperties;\n+\n+  // Extract the color from the gradient string for the avatar\n+  const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n+  \n+  // Compute name from firstName and lastName\n+  const name = lead.firstName && lead.lastName \n+    ? `${lead.firstName} ${lead.lastName}`\n+    : lead.firstName || lead.lastName || 'Unnamed Lead';\n+  \n+  const handleCardClick = (e: React.MouseEvent) => {\n+    // Prevent navigation when clicking on interactive elements\n+    if (\n+      e.target instanceof HTMLElement && \n+      (e.target.closest('button') || e.target.closest('[role=\"menuitem\"]'))\n+    ) {\n+      return;\n+    }\n+    \n+    // Navigate to lead detail page using the ID (no conversion needed since it's already a string)\n+    router.push(`/dashboard/leads/${lead.id}`);\n+  };\n+\n+  const handleEmailClick = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    window.location.href = `mailto:${lead.email}`;\n+  };\n+\n+  const handlePhoneClick = (e: React.MouseEvent) => {\n+    e.stopPropagation();\n+    window.location.href = `tel:${lead.phone}`;\n+  };\n+\n+  return (\n+    <Card \n+      ref={setNodeRef}\n+      style={style}\n+      className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer touch-manipulation select-none ${\n+        isDragging ? 'opacity-70' : ''\n+      }`}\n+      onClick={handleCardClick}\n+      {...attributes}\n+      {...listeners}\n+    >\n+      <div className=\"absolute top-0 left-0 w-6 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n+        <GripVertical className=\"h-5 w-5 text-muted-foreground/50\" />\n+      </div>\n+      <CardContent className=\"p-4 pt-4 pl-8\">\n+        <div className=\"flex justify-between items-start mb-2\">\n+          <div className=\"flex items-center\">\n+            <Avatar className=\"h-8 w-8 mr-2\">\n+              <div className={`h-full w-full flex items-center justify-center ${colorClass} text-white font-medium`}>\n+                {name.charAt(0) || '?'}\n+              </div>\n+            </Avatar>\n+            <div>\n+              <h3 className=\"font-semibold text-sm\">{name}</h3>\n+              <p className=\"text-xs text-muted-foreground\">{lead.company}</p>\n+            </div>\n+          </div>\n+          <Badge variant=\"outline\" className=\"bg-muted/30 text-xs\">\n+            {formatCurrency(lead.value || 0)}\n+          </Badge>\n+        </div>\n+        \n+        <div className=\"flex flex-col gap-1 text-xs text-muted-foreground mt-3\">\n+          {lead.email && (\n+            <div className=\"flex items-center gap-2\">\n+              <Mail className=\"h-3 w-3\" />\n+              <span className=\"truncate max-w-[180px]\">{lead.email}</span>\n+            </div>\n+          )}\n+          {lead.phone && (\n+            <div className=\"flex items-center gap-2\">\n+              <Phone className=\"h-3 w-3\" />\n+              <span>{lead.phone}</span>\n+            </div>\n+          )}\n+        </div>\n+      </CardContent>\n+      \n+      <CardFooter className=\"px-4 py-2 pl-8 border-t flex justify-between text-xs text-muted-foreground\">\n+        <div className=\"flex items-center\">\n+          <Clock className=\"h-3 w-3 mr-1\" />\n+          <span>\n+            {lead.lastActivity \n+              ? formatDistanceToNow(new Date(lead.lastActivity), { addSuffix: true })\n+              : 'No activity'}\n+          </span>\n+        </div>\n+        <button \n+          className=\"hover:bg-muted/50 p-1 rounded-full\"\n+          onClick={(e) => e.stopPropagation()}\n+        >\n+          <MoreHorizontal className=\"h-3 w-3\" />\n+        </button>\n+      </CardFooter>\n+    </Card>\n+  );\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742498346786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n \"use client\";\n \n-import { useSortable } from '@dnd-kit/sortable';\n-import { CSS } from '@dnd-kit/utilities';\n import { Card, CardContent, CardFooter } from '@/components/ui/card';\n import { Button } from '@/components/ui/button';\n import { useRouter } from 'next/navigation';\n import { \n@@ -37,21 +35,9 @@\n \n // Optimized KanbanCard component with professional design\n export function KanbanCard({ id, lead, columnColor, isDragging }: KanbanCardProps) {\n   const router = useRouter();\n-  const {\n-    attributes,\n-    listeners,\n-    setNodeRef,\n-    transform,\n-    transition,\n-  } = useSortable({ id });\n-\n-  const style = {\n-    transform: CSS.Transform.toString(transform),\n-    transition,\n-  } as React.CSSProperties;\n-\n+  \n   // Extract the color from the gradient string for the avatar\n   const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n   \n   // Compute name from firstName and lastName\n@@ -67,9 +53,9 @@\n     ) {\n       return;\n     }\n     \n-    // Navigate to lead detail page using the ID (no conversion needed since it's already a string)\n+    // Navigate to lead detail page using the ID\n     router.push(`/dashboard/leads/${lead.id}`);\n   };\n \n   const handleEmailClick = (e: React.MouseEvent) => {\n@@ -83,16 +69,12 @@\n   };\n \n   return (\n     <Card \n-      ref={setNodeRef}\n-      style={style}\n       className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer touch-manipulation select-none ${\n-        isDragging ? 'opacity-70' : ''\n+        isDragging ? 'opacity-70 shadow-lg' : ''\n       }`}\n       onClick={handleCardClick}\n-      {...attributes}\n-      {...listeners}\n     >\n       <div className=\"absolute top-0 left-0 w-6 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n         <GripVertical className=\"h-5 w-5 text-muted-foreground/50\" />\n       </div>\n@@ -147,151 +129,5 @@\n         </button>\n       </CardFooter>\n     </Card>\n   );\n-}\n-\"use client\";\n-\n-import { useSortable } from '@dnd-kit/sortable';\n-import { CSS } from '@dnd-kit/utilities';\n-import { Card, CardContent, CardFooter } from '@/components/ui/card';\n-import { Button } from '@/components/ui/button';\n-import { useRouter } from 'next/navigation';\n-import { \n-  Mail, \n-  Phone, \n-  MoreHorizontal, \n-  Calendar,\n-  Building2,\n-  DollarSign,\n-  Clock,\n-  GripVertical\n-} from 'lucide-react';\n-import {\n-  DropdownMenu,\n-  DropdownMenuContent,\n-  DropdownMenuItem,\n-  DropdownMenuTrigger,\n-} from '@/components/ui/dropdown-menu';\n-import React from 'react';\n-import { Badge } from '@/components/ui/badge';\n-import { Avatar } from '@/components/ui/avatar';\n-import { formatDistanceToNow } from 'date-fns';\n-import { Lead } from '@/data/leads';\n-import { formatCurrency } from '@/lib/utils';\n-\n-interface KanbanCardProps {\n-  id: string;\n-  lead: Lead;\n-  columnColor: string;\n-  isDragging?: boolean;\n-}\n-\n-// Optimized KanbanCard component with professional design\n-export function KanbanCard({ id, lead, columnColor, isDragging }: KanbanCardProps) {\n-  const router = useRouter();\n-  const {\n-    attributes,\n-    listeners,\n-    setNodeRef,\n-    transform,\n-    transition,\n-  } = useSortable({ id });\n-\n-  const style = {\n-    transform: CSS.Transform.toString(transform),\n-    transition,\n-  } as React.CSSProperties;\n-\n-  // Extract the color from the gradient string for the avatar\n-  const colorClass = columnColor.split(' ')[1].replace('from-', 'bg-');\n-  \n-  const handleCardClick = (e: React.MouseEvent) => {\n-    // Prevent navigation when clicking on interactive elements\n-    if (\n-      e.target instanceof HTMLElement && \n-      (e.target.closest('button') || e.target.closest('[role=\"menuitem\"]'))\n-    ) {\n-      return;\n-    }\n-    \n-    // Navigate to lead detail page using the ID (no conversion needed since it's already a string)\n-    router.push(`/dashboard/leads/${lead.id}`);\n-  };\n-\n-  const handleEmailClick = (e: React.MouseEvent) => {\n-    e.stopPropagation();\n-    window.location.href = `mailto:${lead.email}`;\n-  };\n-\n-  const handlePhoneClick = (e: React.MouseEvent) => {\n-    e.stopPropagation();\n-    window.location.href = `tel:${lead.phone}`;\n-  };\n-\n-  return (\n-    <Card \n-      ref={setNodeRef}\n-      style={style}\n-      className={`shadow-sm hover:shadow-md transition-shadow bg-white group cursor-pointer touch-manipulation select-none ${\n-        isDragging ? 'opacity-70' : ''\n-      }`}\n-      onClick={handleCardClick}\n-      {...attributes}\n-      {...listeners}\n-    >\n-      <div className=\"absolute top-0 left-0 w-6 h-full bg-transparent opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\n-        <GripVertical className=\"h-5 w-5 text-muted-foreground/50\" />\n-      </div>\n-      <CardContent className=\"p-4 pt-4 pl-8\">\n-        <div className=\"flex justify-between items-start mb-2\">\n-          <div className=\"flex items-center\">\n-            <Avatar className=\"h-8 w-8 mr-2\">\n-              <div className={`h-full w-full flex items-center justify-center ${colorClass} text-white font-medium`}>\n-                {lead.name?.charAt(0) || '?'}\n-              </div>\n-            </Avatar>\n-            <div>\n-              <h3 className=\"font-semibold text-sm\">{lead.name}</h3>\n-              <p className=\"text-xs text-muted-foreground\">{lead.company}</p>\n-            </div>\n-          </div>\n-          <Badge variant=\"outline\" className=\"bg-muted/30 text-xs\">\n-            {formatCurrency(lead.value || 0)}\n-          </Badge>\n-        </div>\n-        \n-        <div className=\"flex flex-col gap-1 text-xs text-muted-foreground mt-3\">\n-          {lead.email && (\n-            <div className=\"flex items-center gap-2\">\n-              <Mail className=\"h-3 w-3\" />\n-              <span className=\"truncate max-w-[180px]\">{lead.email}</span>\n-            </div>\n-          )}\n-          {lead.phone && (\n-            <div className=\"flex items-center gap-2\">\n-              <Phone className=\"h-3 w-3\" />\n-              <span>{lead.phone}</span>\n-            </div>\n-          )}\n-        </div>\n-      </CardContent>\n-      \n-      <CardFooter className=\"px-4 py-2 pl-8 border-t flex justify-between text-xs text-muted-foreground\">\n-        <div className=\"flex items-center\">\n-          <Clock className=\"h-3 w-3 mr-1\" />\n-          <span>\n-            {lead.lastActivity \n-              ? formatDistanceToNow(new Date(lead.lastActivity), { addSuffix: true })\n-              : 'No activity'}\n-          </span>\n-        </div>\n-        <button \n-          className=\"hover:bg-muted/50 p-1 rounded-full\"\n-          onClick={(e) => e.stopPropagation()}\n-        >\n-          <MoreHorizontal className=\"h-3 w-3\" />\n-        </button>\n-      </CardFooter>\n-    </Card>\n-  );\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1741293309363,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useRouter } from 'next/navigation';\nimport { \n  Mail, \n  Phone, \n  MoreHorizontal, \n  Calendar,\n  Building2,\n  DollarSign,\n  Clock\n} from 'lucide-react';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\ninterface Lead {\n  id: number;\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  status: string;\n  value: string;\n}\n\ninterface KanbanCardProps {\n  id: string;\n  lead: Lead;\n  columnColor: string;\n}\n\nexport function KanbanCard({ id, lead, columnColor }: KanbanCardProps) {\n  const router = useRouter();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const handleCardClick = (e: React.MouseEvent) => {\n    // Prevent navigation when clicking on interactive elements\n    if (\n      e.target instanceof HTMLElement && \n      (e.target.closest('button') || e.target.closest('[role=\"menuitem\"]'))\n    ) {\n      return;\n    }\n    \n    // Navigate to lead detail page\n    router.push(`/dashboard/leads/${lead.id}`);\n  };\n\n  const handleEmailClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    window.location.href = `mailto:${lead.email}`;\n  };\n\n  const handlePhoneClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    window.location.href = `tel:${lead.phone}`;\n  };\n\n  return (\n    <Card\n      ref={setNodeRef}\n      style={style}\n      className=\"p-4 bg-card hover:shadow-md transition-shadow border border-slate-200 cursor-pointer select-none\"\n      onClick={handleCardClick}\n      {...attributes}\n      {...listeners}\n    >\n      <div className=\"flex justify-between items-start mb-3\">\n        <div className=\"flex-1\">\n          <h4 className=\"font-medium text-base mb-1\">{lead.name}</h4>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Building2 className=\"w-4 h-4 mr-1\" />\n            {lead.company}\n          </div>\n        </div>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild onClick={(e) => e.stopPropagation()}>\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}`)}>\n              View Details\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => router.push(`/dashboard/leads/${lead.id}?edit=true`)}>\n              Edit Lead\n            </DropdownMenuItem>\n            <DropdownMenuItem className=\"text-red-600\">Delete</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      \n      <div className=\"flex items-center space-x-2 mb-3\">\n        <Button \n          variant=\"ghost\" \n          size=\"icon\" \n          className=\"h-8 w-8 hover:bg-slate-100\"\n          title={lead.email}\n          onClick={handleEmailClick}\n        >\n          <Mail className=\"h-4 w-4\" />\n        </Button>\n        <Button \n          variant=\"ghost\" \n          size=\"icon\" \n          className=\"h-8 w-8 hover:bg-slate-100\"\n          title={lead.phone}\n          onClick={handlePhoneClick}\n        >\n          <Phone className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      <div className=\"flex justify-between items-center text-sm\">\n        <div className=\"flex items-center text-emerald-600 font-medium\">\n          <DollarSign className=\"w-4 h-4 mr-1\" />\n          {lead.value}\n        </div>\n        <div className=\"flex items-center text-muted-foreground\">\n          <Clock className=\"w-4 h-4 mr-1\" />\n          <span>2 days ago</span>\n        </div>\n      </div>\n    </Card>\n  );\n}"
        }
    ]
}