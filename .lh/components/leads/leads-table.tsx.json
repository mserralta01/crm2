{
    "sourceFile": "components/leads/leads-table.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741292594334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741292594334,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { MoreHorizontal, Mail, Phone } from 'lucide-react';\nimport { getLeads } from '@/lib/services/leads-service';\nimport { Lead } from '@/data/leads';\nimport Link from 'next/link';\n\nconst statusColors = {\n  New: \"bg-blue-100 text-blue-800\",\n  Contacted: \"bg-yellow-100 text-yellow-800\",\n  Qualified: \"bg-green-100 text-green-800\",\n  Negotiating: \"bg-purple-100 text-purple-800\"\n};\n\nexport function LeadsTable({ searchTerm }: { searchTerm: string }) {\n  const [leads, setLeads] = useState<Lead[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchLeads() {\n      try {\n        setLoading(true);\n        const data = await getLeads();\n        setLeads(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching leads:', err);\n        setError('Failed to load leads. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchLeads();\n  }, []);\n\n  const filteredLeads = leads.filter(lead => \n    lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    lead.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    lead.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  if (loading) {\n    return <div className=\"py-10 text-center\">Loading leads...</div>;\n  }\n\n  if (error) {\n    return <div className=\"py-10 text-center text-red-500\">{error}</div>;\n  }\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Name</TableHead>\n          <TableHead>Company</TableHead>\n          <TableHead>Contact</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Value</TableHead>\n          <TableHead className=\"w-[50px]\"></TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {filteredLeads.length === 0 ? (\n          <TableRow>\n            <TableCell colSpan={6} className=\"text-center py-10\">\n              {searchTerm ? 'No leads match your search' : 'No leads found. Create your first lead!'}\n            </TableCell>\n          </TableRow>\n        ) : (\n          filteredLeads.map((lead) => (\n            <TableRow key={lead.id}>\n              <TableCell className=\"font-medium\">\n                <Link href={`/dashboard/leads/${lead.id}`} className=\"hover:underline\">\n                  {lead.name}\n                </Link>\n              </TableCell>\n              <TableCell>{lead.company}</TableCell>\n              <TableCell>\n                <div className=\"flex items-center space-x-4\">\n                  <a href={`mailto:${lead.email}`}>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n                      <Mail className=\"h-4 w-4\" />\n                    </Button>\n                  </a>\n                  <a href={`tel:${lead.phone}`}>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n                      <Phone className=\"h-4 w-4\" />\n                    </Button>\n                  </a>\n                </div>\n              </TableCell>\n              <TableCell>\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  statusColors[lead.status as keyof typeof statusColors] || \"bg-slate-100 text-slate-800\"\n                }`}>\n                  {lead.status}\n                </span>\n              </TableCell>\n              <TableCell>{lead.value}</TableCell>\n              <TableCell>\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))\n        )}\n      </TableBody>\n    </Table>\n  );\n}"
        }
    ]
}