{
    "sourceFile": "components/leads/lead-note.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1743707407488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1743707407488,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { \n  Pin, \n  PinOff, \n  Trash2,\n  MoreHorizontal,\n  Clock \n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { cn } from '@/lib/utils';\n\ninterface LeadNoteProps {\n  id: number;\n  title: string;\n  description: string;\n  date: string;\n  isPinned?: boolean;\n  onPin: (id: number, isPinned: boolean) => void;\n  onDelete: (id: number) => void;\n}\n\nexport function LeadNote({ \n  id, \n  title, \n  description, \n  date, \n  isPinned = false,\n  onPin,\n  onDelete\n}: LeadNoteProps) {\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Format date to readable format\n  const formatNoteDate = (dateString: string) => {\n    return format(new Date(dateString), 'MMM d, yyyy h:mm a');\n  };\n\n  return (\n    <Card \n      className={cn(\n        \"p-4 transition-colors\", \n        isPinned ? \"bg-amber-50/80 border-amber-200\" : \"bg-muted/50\",\n        isHovered && \"shadow-md\"\n      )}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className=\"flex justify-between items-start\">\n        <div className=\"flex-1 pr-2\">\n          <h4 className=\"font-medium\">{title}</h4>\n          <p className=\"text-sm text-muted-foreground mt-1 whitespace-pre-wrap\">{description}</p>\n          <div className=\"flex items-center text-xs text-muted-foreground mt-2\">\n            <Clock className=\"w-3 h-3 mr-1\" />\n            {formatNoteDate(date)}\n            {isPinned && (\n              <span className=\"ml-2 bg-amber-100 text-amber-800 px-1.5 py-0.5 rounded-sm text-[10px] font-medium uppercase\">\n                Pinned\n              </span>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className={cn(\n              \"h-8 w-8 text-muted-foreground\", \n              isPinned ? \"text-amber-600\" : \"\",\n              !isHovered && !isPinned && \"opacity-0\"\n            )}\n            onClick={() => onPin(id, !isPinned)}\n            title={isPinned ? \"Unpin note\" : \"Pin note\"}\n          >\n            {isPinned ? <Pin className=\"h-4 w-4\" /> : <PinOff className=\"h-4 w-4\" />}\n          </Button>\n          \n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button \n                variant=\"ghost\" \n                size=\"icon\" \n                className={cn(\n                  \"h-8 w-8 text-muted-foreground\",\n                  !isHovered && \"opacity-0\"\n                )}\n              >\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem\n                onClick={() => onPin(id, !isPinned)}\n                className=\"cursor-pointer\"\n              >\n                {isPinned ? (\n                  <>\n                    <PinOff className=\"mr-2 h-4 w-4\" />\n                    <span>Unpin</span>\n                  </>\n                ) : (\n                  <>\n                    <Pin className=\"mr-2 h-4 w-4\" />\n                    <span>Pin</span>\n                  </>\n                )}\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem \n                onClick={() => onDelete(id)}\n                className=\"cursor-pointer text-destructive focus:text-destructive\"\n              >\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                <span>Delete</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </Card>\n  );\n} "
        }
    ]
}